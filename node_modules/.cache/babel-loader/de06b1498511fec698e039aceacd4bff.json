{"ast":null,"code":"var _jsxFileName = \"/Volumes/Development/Web Development/react-js/all/assignment/volunteer/volunteer/src/components/Login/Login.js\";\nimport { makeStyles } from '@material-ui/core';\nimport React from 'react';\nimport { Button, Col, Row } from 'react-bootstrap';\nimport google from '../../images/google.png';\nimport * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport firebaseConfig from './firebase.config';\n\nconst Login = () => {\n  const useStyles = makeStyles(theme => ({\n    root: {\n      '& > *': {\n        margin: theme.spacing(1),\n        width: '25ch'\n      },\n      textAlign: 'center',\n      width: '400px',\n      height: '400px',\n      backgroundColor: '#f2f2f2',\n      marginLeft: \"35%\",\n      marginTop: '40px',\n      padding: '20px 0 30px 0'\n    },\n    align: {\n      margin: '20px',\n      padding: '40px',\n      marginTop: '60px',\n      marginLeft: '20px'\n    },\n    googlebtn: {\n      width: '300px',\n      fontSize: '13px',\n      backgroundColor: 'white',\n      color: 'black',\n      borderRadius: '20px'\n    }\n  }));\n\n  if (firebase.apps.length === 0) {\n    firebase.initializeApp(firebaseConfig);\n  }\n\n  const handleGoogleSignIn = () => {\n    var provider = new firebase.auth.GoogleAuthProvider();\n    firebase.auth().signInWithPopup(provider).then(function (result) {\n      // This gives you a Google Access Token. You can use it to access the Google API.\n      var token = result.credential.accessToken; // The signed-in user info.\n\n      var user = result.user;\n      console.log(user); // ...\n    }).catch(function (error) {\n      // Handle Errors here.\n      var errorCode = error.code;\n      var errorMessage = error.message; // The email of the user's account used.\n\n      var email = error.email; // The firebase.auth.AuthCredential type that was used.\n\n      var credential = error.credential; // ...\n    });\n  };\n\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.root,\n    noValidate: true,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, \"Login With\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.align,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleGoogleSignIn,\n    className: classes.googlebtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    style: {\n      width: '20px'\n    },\n    src: google,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 25\n    }\n  }, \"Sign In With Google\"))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 22\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    className: classes.googlebtn,\n    variant: \"warning\",\n    size: \"md\",\n    block: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, \"Don't have an account? Create an account\")));\n};\n\nexport default Login;","map":{"version":3,"sources":["/Volumes/Development/Web Development/react-js/all/assignment/volunteer/volunteer/src/components/Login/Login.js"],"names":["makeStyles","React","Button","Col","Row","google","firebase","firebaseConfig","Login","useStyles","theme","root","margin","spacing","width","textAlign","height","backgroundColor","marginLeft","marginTop","padding","align","googlebtn","fontSize","color","borderRadius","apps","length","initializeApp","handleGoogleSignIn","provider","auth","GoogleAuthProvider","signInWithPopup","then","result","token","credential","accessToken","user","console","log","catch","error","errorCode","code","errorMessage","message","email","classes"],"mappings":"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","sourcesContent":["import { makeStyles } from '@material-ui/core';\nimport React from 'react';\nimport { Button, Col, Row } from 'react-bootstrap';\nimport google from '../../images/google.png'\n\nimport * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport firebaseConfig from './firebase.config';\n\n\n\nconst Login = () => {\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            '& > *': {\n                margin: theme.spacing(1),\n                width: '25ch',\n            },\n            textAlign: 'center',\n\n            width: '400px',\n            height: '400px',\n            backgroundColor: '#f2f2f2',\n            marginLeft: \"35%\",\n            marginTop: '40px',\n            padding: '20px 0 30px 0'\n\n        },\n        align: {\n            margin: '20px',\n            padding: '40px',\n            marginTop: '60px',\n            marginLeft: '20px',\n\n        },\n\n        googlebtn: {\n            width: '300px',\n            fontSize: '13px',\n            backgroundColor: 'white',\n            color: 'black',\n            borderRadius: '20px'\n        }\n\n\n    }));\n\n    if (firebase.apps.length === 0) {\n        firebase.initializeApp(firebaseConfig);\n    }    \n    const handleGoogleSignIn = () => {\n        var provider = new firebase.auth.GoogleAuthProvider();\n        firebase.auth().signInWithPopup(provider).then(function(result) {\n            // This gives you a Google Access Token. You can use it to access the Google API.\n            var token = result.credential.accessToken;\n            // The signed-in user info.\n            var user = result.user;\n            console.log(user)\n            // ...\n          }).catch(function(error) {\n            // Handle Errors here.\n            var errorCode = error.code;\n            var errorMessage = error.message;\n            // The email of the user's account used.\n            var email = error.email;\n            // The firebase.auth.AuthCredential type that was used.\n            var credential = error.credential;\n            // ...\n          });\n\n\n    }\n\n\n    const classes = useStyles();\n    return (\n        <form className={classes.root} noValidate autoComplete=\"off\">\n            <br />\n            <h4>Login With</h4>\n\n            <div className={classes.align}>\n\n                <Button onClick={handleGoogleSignIn} className={classes.googlebtn}>\n                    <Row>\n                        <Col md={3}><img style={{ width: '20px' }} src={google} alt=\"\" /></Col>\n                        <Col md={6}>Sign In With Google</Col>\n                    </Row>\n                </Button>\n                <br/><br/>\n                <Button className={classes.googlebtn} variant=\"warning\" size=\"md\" block>\n                    Don't have an account? Create an account\n                </Button>\n            </div>\n\n\n\n        </form>\n    );\n};\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}