{"ast":null,"code":"import{makeStyles}from'@material-ui/core';import React from'react';import{Button,Col,Row}from'react-bootstrap';import google from'../../images/google.png';import*as firebase from\"firebase/app\";import\"firebase/auth\";import firebaseConfig from'./firebase.config';import{useContext}from'react';import{UserContext}from'../../App';import{useHistory,useLocation}from'react-router-dom';var Login=function Login(){var useStyles=makeStyles(function(theme){return{root:{'& > *':{margin:theme.spacing(1),width:'25ch'},textAlign:'center',width:'400px',height:'400px',backgroundColor:'#f2f2f2',marginLeft:\"35%\",marginTop:'40px',padding:'20px 0 30px 0'},align:{margin:'20px',padding:'40px',marginTop:'60px',marginLeft:'20px'},googlebtn:{width:'300px',fontSize:'13px',backgroundColor:'white',color:'black',borderRadius:'20px'}};});var classes=useStyles();var _useContext=useContext(UserContext),setLoggedInUser=_useContext.setLoggedInUser;var history=useHistory();var location=useLocation();var _ref=location.state||{from:{pathname:\"/\"}},from=_ref.from;if(firebase.apps.length===0){firebase.initializeApp(firebaseConfig);}var handleGoogleSignIn=function handleGoogleSignIn(){var provider=new firebase.auth.GoogleAuthProvider();firebase.auth().signInWithPopup(provider).then(function(result){var _result$user=result.user,displayName=_result$user.displayName,email=_result$user.email;var signInUser={displayName:displayName,email:email};setLoggedInUser(signInUser);history.replace(from);//console.log(signInUser)\n// ...\n}).catch(function(error){// Handle Errors here.\nvar errorCode=error.code;var errorMessage=error.message;// The email of the user's account used.\nvar email=error.email;// The firebase.auth.AuthCredential type that was used.\nvar credential=error.credential;// ...\n});};return/*#__PURE__*/React.createElement(\"form\",{className:classes.root,noValidate:true,autoComplete:\"off\"},/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"h4\",null,\"Login With\"),/*#__PURE__*/React.createElement(\"div\",{className:classes.align},/*#__PURE__*/React.createElement(Button,{onClick:handleGoogleSignIn,className:classes.googlebtn},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:3},/*#__PURE__*/React.createElement(\"img\",{style:{width:'20px'},src:google,alt:\"\"})),/*#__PURE__*/React.createElement(Col,{md:6},\"Sign In With Google\"))),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(Button,{className:classes.googlebtn,variant:\"warning\",size:\"md\",block:true},\"Don't have an account? Create an account\")));};export default Login;","map":{"version":3,"sources":["/Volumes/Development/Web Development/react-js/all/assignment/volunteer/volunteer/src/components/Login/Login.js"],"names":["makeStyles","React","Button","Col","Row","google","firebase","firebaseConfig","useContext","UserContext","useHistory","useLocation","Login","useStyles","theme","root","margin","spacing","width","textAlign","height","backgroundColor","marginLeft","marginTop","padding","align","googlebtn","fontSize","color","borderRadius","classes","setLoggedInUser","history","location","state","from","pathname","apps","length","initializeApp","handleGoogleSignIn","provider","auth","GoogleAuthProvider","signInWithPopup","then","result","user","displayName","email","signInUser","replace","catch","error","errorCode","code","errorMessage","message","credential"],"mappings":"AAAA,OAASA,UAAT,KAA2B,mBAA3B,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,MAAT,CAAiBC,GAAjB,CAAsBC,GAAtB,KAAiC,iBAAjC,CACA,MAAOC,CAAAA,MAAP,KAAmB,yBAAnB,CAEA,MAAO,GAAKC,CAAAA,QAAZ,KAA0B,cAA1B,CACA,MAAO,eAAP,CACA,MAAOC,CAAAA,cAAP,KAA2B,mBAA3B,CACA,OAASC,UAAT,KAA2B,OAA3B,CACA,OAASC,WAAT,KAA4B,WAA5B,CACA,OAASC,UAAT,CAAqBC,WAArB,KAAwC,kBAAxC,CAIA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,EAAM,CAEhB,GAAMC,CAAAA,SAAS,CAAGb,UAAU,CAAC,SAACc,KAAD,QAAY,CACrCC,IAAI,CAAE,CACF,QAAS,CACLC,MAAM,CAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADH,CAELC,KAAK,CAAE,MAFF,CADP,CAKFC,SAAS,CAAE,QALT,CAOFD,KAAK,CAAE,OAPL,CAQFE,MAAM,CAAE,OARN,CASFC,eAAe,CAAE,SATf,CAUFC,UAAU,CAAE,KAVV,CAWFC,SAAS,CAAE,MAXT,CAYFC,OAAO,CAAE,eAZP,CAD+B,CAgBrCC,KAAK,CAAE,CACHT,MAAM,CAAE,MADL,CAEHQ,OAAO,CAAE,MAFN,CAGHD,SAAS,CAAE,MAHR,CAIHD,UAAU,CAAE,MAJT,CAhB8B,CAuBrCI,SAAS,CAAE,CACPR,KAAK,CAAE,OADA,CAEPS,QAAQ,CAAE,MAFH,CAGPN,eAAe,CAAE,OAHV,CAIPO,KAAK,CAAE,OAJA,CAKPC,YAAY,CAAE,MALP,CAvB0B,CAAZ,EAAD,CAA5B,CA+BA,GAAMC,CAAAA,OAAO,CAAGjB,SAAS,EAAzB,CAjCgB,gBAmCYL,UAAU,CAACC,WAAD,CAnCtB,CAmCRsB,eAnCQ,aAmCRA,eAnCQ,CAqChB,GAAMC,CAAAA,OAAO,CAAGtB,UAAU,EAA1B,CACA,GAAMuB,CAAAA,QAAQ,CAAGtB,WAAW,EAA5B,CAtCgB,SAuCCsB,QAAQ,CAACC,KAAT,EAAkB,CAAEC,IAAI,CAAE,CAAEC,QAAQ,CAAE,GAAZ,CAAR,CAvCnB,CAuCRD,IAvCQ,MAuCRA,IAvCQ,CAyChB,GAAI7B,QAAQ,CAAC+B,IAAT,CAAcC,MAAd,GAAyB,CAA7B,CAAgC,CAC5BhC,QAAQ,CAACiC,aAAT,CAAuBhC,cAAvB,EACH,CACD,GAAMiC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,EAAM,CAC7B,GAAIC,CAAAA,QAAQ,CAAG,GAAInC,CAAAA,QAAQ,CAACoC,IAAT,CAAcC,kBAAlB,EAAf,CACArC,QAAQ,CAACoC,IAAT,GAAgBE,eAAhB,CAAgCH,QAAhC,EAA0CI,IAA1C,CAA+C,SAAUC,MAAV,CAAkB,kBAC9BA,MAAM,CAACC,IADuB,CACrDC,WADqD,cACrDA,WADqD,CACxCC,KADwC,cACxCA,KADwC,CAE7D,GAAMC,CAAAA,UAAU,CAAG,CAAEF,WAAW,CAAXA,WAAF,CAAeC,KAAK,CAALA,KAAf,CAAnB,CACAlB,eAAe,CAACmB,UAAD,CAAf,CACAlB,OAAO,CAACmB,OAAR,CAAgBhB,IAAhB,EAEA;AACA;AACH,CARD,EAQGiB,KARH,CAQS,SAAUC,KAAV,CAAiB,CACtB;AACA,GAAIC,CAAAA,SAAS,CAAGD,KAAK,CAACE,IAAtB,CACA,GAAIC,CAAAA,YAAY,CAAGH,KAAK,CAACI,OAAzB,CACA;AACA,GAAIR,CAAAA,KAAK,CAAGI,KAAK,CAACJ,KAAlB,CACA;AACA,GAAIS,CAAAA,UAAU,CAAGL,KAAK,CAACK,UAAvB,CACA;AACH,CAjBD,EAoBH,CAtBD,CAyBA,mBAEI,4BAAM,SAAS,CAAE5B,OAAO,CAACf,IAAzB,CAA+B,UAAU,KAAzC,CAA0C,YAAY,CAAC,KAAvD,eAEI,8BAFJ,cAGI,2CAHJ,cAKI,2BAAK,SAAS,CAAEe,OAAO,CAACL,KAAxB,eAEI,oBAAC,MAAD,EAAQ,OAAO,CAAEe,kBAAjB,CAAqC,SAAS,CAAEV,OAAO,CAACJ,SAAxD,eACI,oBAAC,GAAD,mBACI,oBAAC,GAAD,EAAK,EAAE,CAAE,CAAT,eAAY,2BAAK,KAAK,CAAE,CAAER,KAAK,CAAE,MAAT,CAAZ,CAA+B,GAAG,CAAEb,MAApC,CAA4C,GAAG,CAAC,EAAhD,EAAZ,CADJ,cAEI,oBAAC,GAAD,EAAK,EAAE,CAAE,CAAT,wBAFJ,CADJ,CAFJ,cAQI,8BARJ,cAQU,8BARV,cASI,oBAAC,MAAD,EAAQ,SAAS,CAAEyB,OAAO,CAACJ,SAA3B,CAAsC,OAAO,CAAC,SAA9C,CAAwD,IAAI,CAAC,IAA7D,CAAkE,KAAK,KAAvE,6CATJ,CALJ,CAFJ,CAwBH,CA7FD,CA+FA,cAAed,CAAAA,KAAf","sourcesContent":["import { makeStyles } from '@material-ui/core';\nimport React from 'react';\nimport { Button, Col, Row } from 'react-bootstrap';\nimport google from '../../images/google.png'\n\nimport * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport firebaseConfig from './firebase.config';\nimport { useContext } from 'react';\nimport { UserContext } from '../../App';\nimport { useHistory, useLocation } from 'react-router-dom';\n\n\n\nconst Login = () => {\n\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            '& > *': {\n                margin: theme.spacing(1),\n                width: '25ch',\n            },\n            textAlign: 'center',\n\n            width: '400px',\n            height: '400px',\n            backgroundColor: '#f2f2f2',\n            marginLeft: \"35%\",\n            marginTop: '40px',\n            padding: '20px 0 30px 0'\n\n        },\n        align: {\n            margin: '20px',\n            padding: '40px',\n            marginTop: '60px',\n            marginLeft: '20px',\n\n        },\n        googlebtn: {\n            width: '300px',\n            fontSize: '13px',\n            backgroundColor: 'white',\n            color: 'black',\n            borderRadius: '20px'\n        }\n    }));\n    const classes = useStyles();\n\n    const { setLoggedInUser } = useContext(UserContext)\n\n    const history = useHistory()\n    const location = useLocation()\n    const { from } = location.state || { from: { pathname: \"/\" } };\n\n    if (firebase.apps.length === 0) {\n        firebase.initializeApp(firebaseConfig);\n    }\n    const handleGoogleSignIn = () => {\n        var provider = new firebase.auth.GoogleAuthProvider();\n        firebase.auth().signInWithPopup(provider).then(function (result) {\n            const { displayName, email } = result.user\n            const signInUser = { displayName, email }\n            setLoggedInUser(signInUser)\n            history.replace(from)\n\n            //console.log(signInUser)\n            // ...\n        }).catch(function (error) {\n            // Handle Errors here.\n            var errorCode = error.code;\n            var errorMessage = error.message;\n            // The email of the user's account used.\n            var email = error.email;\n            // The firebase.auth.AuthCredential type that was used.\n            var credential = error.credential;\n            // ...\n        });\n\n\n    }\n\n\n    return (\n\n        <form className={classes.root} noValidate autoComplete=\"off\">\n\n            <br />\n            <h4>Login With</h4>\n\n            <div className={classes.align}>\n\n                <Button onClick={handleGoogleSignIn} className={classes.googlebtn}>\n                    <Row>\n                        <Col md={3}><img style={{ width: '20px' }} src={google} alt=\"\" /></Col>\n                        <Col md={6}>Sign In With Google</Col>\n                    </Row>\n                </Button>\n                <br /><br />\n                <Button className={classes.googlebtn} variant=\"warning\" size=\"md\" block>\n                    Don't have an account? Create an account\n                </Button>\n            </div>\n\n        </form>\n    );\n\n};\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}